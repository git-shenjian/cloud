#端口
server:
  port: 8001

spring:
  application:
    name: cloud-provider-payment     #应用名，同时也是该服务注册到eureka注册中心后的名称Application，一般不要轻易改变
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource   #当前数据源操作类型
    driver-class-name: org.gjt.mm.mysql.Driver     #mysql驱动包
    url: jdbc:mysql://localhost:3306/cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: root
    druid:
      # 默认 true 为 true 时 validationQuery 必须设为非空字符串
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 默认 false 为 true 时 validationQuery 必须设为非空字符串
      # 【建议】配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
      # 如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 默认 true 为 true 时 validationQuery 必须设为非空字符串
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，
      # testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: select 1

#mybtais设置
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: cn.sj.entities       #所有Entity别名类所在包

eureka:
  client:
    #表示是否将自己注册进Eurekaserver,默认为true。
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      defaultZone: http://localhost:7001/eureka #eureka的服务端地址  eureka单机版
      #defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/ #eureka的服务端地址  eureka集群版
  instance:
    instance-id: payment8001  #实列名称,该服务注册到eureka注册中心后Status
    prefer-ip-address: true  #是否显示主机ip
    #eureka客户端向eureka服务端发送心跳的间隔，单位为秒(默认是30秒)
    lease-renewal-interval-in-seconds: 1
    #Eureka服务端在收到最后一次心跳后等待时间上限，单位为秒(默认是90秒)，超时将剔除服务
    lease-expiration-duration-in-seconds: 2